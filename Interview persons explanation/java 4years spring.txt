(341) Java Spring Boot 4 Years Experience Interview - YouTube
https://www.youtube.com/watch?v=Q_MT9ZvtSJo

Transcript:
(00:00) hey guys today we have maduri pidar and she's having around four years of experience in Java SC Boot and microservices so hey hi M how are you yeah I'm good shall we start yes sure can you please introduce yourself and then uh your recent project so I have overall four years of experience in the F development where I have worked in front end using angular framework with the JavaScript typescript and some libraries like a grid and material and in backend I have used Java springbot so uh and I have used some
(00:38) databases like SQL and mongodb along with I have a Proficiency in some control tools like get jira bit so yeah in yeah so full in overall experience in the in development overall experience as a full side developer okay okay and what about your recent project uh recent company okay so uh my recent project was it was the trading project intellectual design called so it it was more based on analysis so the software was for example we have a companies like idas and amul okay big companies so if someone's tried
(01:17) to create the copy of their logo like symbols other software was analyzed so for uh so like it was a very big project I was working on a small moduel of the project where I have worked on in front end I used some functionality worked on some functionalities like like filtering sorting the data showing the table and create the rest API in the back end for that so yeah yeah this is so how do you secure rest apis uh in your project MH okay in the front end if I talk about so for security we are using I think uh authentication okay but
(01:56) uh yeah some JWT token we have used I tokens yes yeah yeah okay so how you are producing these short tokens in the back end in backend uh I think we we have to uh import the uh security a web sec I think security yeah there is a web security starter web security uh dependency you have to import in the pom.
(02:24) xml file and you have to uh implement the class uh web security there is a adapter there is adopter there is a class you have to implement inside you have some methods like configure method or you have to configure the JWT token okay so to configure the J WT token I think you have to uh you have to um use some filter you have to use some filter I need to check like I have worked but yeah I have a basic idea like how we can do so okay okay so what caching mechanism you are using and uh What uh what the methodology of your project is having like water
(03:07) aile it's a aile methodology yes for cing I think in the back end we have some annotations I think you have to import that cing inside inside your dependency or inside your po. XML file I think some dependency you have you are using inil caching or like some external like redes no elastic C uh built only yeah I need to check bacon part more this one yes I know how the cing is working like how the word the annotations is used for that but yeah to expl yeah it's fine so and what what's the Java version uh recently we we use some Java
(03:49) 8 features also in the project so yes okay Java 8 so uh you know like why option class uh was introduced in Java okay I think to avoid the null check pointer we use the optional class Java um so so what is collection framework in Java Collections inside the collections we have we have list we have set we have map this types of collections we have okay so uh can I describe all the collections or like uh no no like just give an over like what's the colle collection pwork and why do we why do we need this I think we do for multiple we we
(04:37) are for multiple operations we are perform like we are performing some operations like for example fing the data storing the data so for the operations to perform the operations we are using the collections over the object so okay okay so what are the main interfaces of java collection framework interfaces like uh okay like list we have we have set we have so do you know about iterator and how it works within this framework iterator I think okay iterator uh iterating the Val I need to check I think I'm not sure much about the but
(05:15) iterator maybe for uh looping the values iterator oh better to Che okay and what enhancements were made to the Java collection framework in Java 8 uh What uh what enhancements were made to the Java collection framework in Java 8 um in Java it like What U maybe I'm not understand properly okay so what enh I need to import you saying something or like uh no no like uh in the Java collection framework what were the enhancement uh that were done in the Java 8 regarding related to the Java collection PR okay I think in Java 8 we have a we
(06:03) have some for example in the interface we are using so we have default static methods we have Lambda EXL we have stream API and then we have like optional class so this is the we can use in here the collections so have you used arrays. sort or collections. sort in your project M yes yes okay so do you know how these uh methods work internally what are the algorithm they are using internally okay I think collections.
(06:36) sort while com okay collection s sort comparing the objects I think we using collection s sort like for example inside the comparator also by for comparing objects we are using collections. sort method and we passing the uh classes um and Aras do sort I think it based on it s the our what can I say it's not based on object uh maybe I'm not sure I need to check is sort properly so basically the AR sort uses dual pivate quick sort algorithm and Tim sort for the different objective like for primitive it uses pivate quick sort
(07:21) and for object arrays it uses stream sort whereas a collection uses on your algorithm internally okay yeah so yeah so what's the can you please tell me the use case of arist Link list and H okay aist for example if you're trying to fade something so so it will I think uh to fade something or to exess something using using the index index variable indexing so I think it's better using the aor list while if you are trying to modify something uh like or remove something so I think link list is better and one more what you like link
(08:02) list head headset okay I think in headset we worked on Hesh values and in the H set it's internally I think using the uh it's have a key value I think internally they have some present values there and um it's some we have some unique value in headset we can say that compared to so how does headset ensure that there are no locates okay I think okay I it in this set we don't have a duplicates correct we don't have duplicate in the set over the list maybe I'm not sure about the internal maybe they'll convert
(08:45) yeah some some vales there internally I'm not sure what is the internal implementation okay so do you know about hash Cod and equal methods yes can you explain I mean not in detail just uh give a okay so for example if I talk about the internal implementation of hashmap so there is a situation where if you are trying to insert something for example index value you are getting okay after like HH code you are getting and then well you are trying to uh put something and for example you got two times like index value see if you're trying to put
(09:26) in a bucket in form of node so if you're it it's the the situation is called hes Collision it means so in that case you have to compare so we use the Hesh code and equals method there to compare the two objects and then based of on based on Bas of this H code and equals method we'll put inside so is tree s sorted internally uh sorry is tree sort sorted internally tree sort internally yeah yeah yeah I mean tree sort is sorted internally or what like if we store the elements inside the tree set Tre set data structure so the
(10:08) elements would be sorted or what no I think in the set it's not in a sorted manner it's the the order is not preserved like you have water is not preserved in tree set yes no no not in tree set in head set in the head set yeah it will it will it will sort or in the tree set sorted so can you give give me an example where Treet is more appropriate than headset uh just give any practical example or like okay set andet okay practical example haset name and we have some details if anyone either basic or Advance uh for H set I think um three
(10:57) set um just a second headset I know but reset headset I know for example we have some data for example I need to put my name and like for my phone number or my email ID so this type of like values if I want to store so we'll use the H okay but Treet the the example I'm not recalling as of now like what would be the best example real life example I think if you want to yeah okay no worries so can you explain internal working of hhb okay so for example we have a 1 to 50 uh 15 uh like we have a bucket uh the
(11:46) value is like 1 to 15 like Z okay so in this for example we have two objects so first uh first we do putut we use to store for for storing purpose okay so first we have to find find the key and value like there's a key value pair so first uh find the key of the like for example the HH code of the key whatever the key is there we find the H code after getting the H code you are performing the mode n minus one operation uh after this like after performing this you'll get the uh you'll get the uh index value okay in this way
(12:20) so you will put whatever you are getting the index value you put in the form of node inside the bucket now the next situation is again there is another like object and now uh if in case uh you are getting the same index now this is a h Collision okay situation now you have to check the equal you have to override the equals and hash code method and now you have to check if it is equal like the the value so you have to uh you have to override the equals equals m you have to check the content if it is same so you
(12:51) have to replace if it is not same so you have to connect in the next modde so uh in this way like the the it will work I think okay so what happens when two keys have the same hash code in the hashm mhm if two keys in the uh so there is there is a h Collision like two keys not a index index value correct you are saying two keys yeah two keys okay so okay so you have to okay two keys have the same HH code so uh I think you have to override the equals method and CH check the uh content I think maybe okay so that's the next step like override but
(13:32) initially what will happen when uh two P have the same H so you are telling the solution um okay same H code so they they end up in the same bucket yeah so uh you have to check uh like if it is same so you have to replace if it is not if it is not s so you have to put in the next as for my understanding in the next mode so can you can you please tell me what changes were done for the hashmap in java8 because before java8 hashmap we have different um I think there is a uh balance tree something red black tree
(14:12) they have using they are using maybe or yeah jav okay so not exactly not exactly the red black tree we are using red Flory but uh when there are too many items end up in the same bucket initially uh we are using a link list uh in Java 8 as well but when too many items end up in the same bucket then list turn into the balance stre which helps speed up searching okay yeah so can we include class as a key in h yes yes we can use okay uh like uh how MH so for example we have a employee class now you are creating a uh
(14:58) you're saying inside the list where where we need to pass as a key in the map or in the hash map yes in the hash map yes so we have a key value PA so you can pass as a key as a like the name inside the generics the name of a class whatever you you'll pass I think inside that generics the class name is okay so uh can you please tell me the time complexities of insertion deletion and in hash insertion deletion or maybe um insertion log in if it is better it's loog insertion deletion and what you saying insertion
(15:37) and deletion and retrieval um maybe log and but I'm not sure um thank you okay yeah so uh as you know we have entry point in every Java program like public static white right MH so uh like can we overload uh this main method uh we can overload but uh yeah jvm will call the Whoever has the string argument so yeah we can over can we override no we cannot this static so we cannot over so what will happen if we don't declare this method as a strat if you are so like if you are you have to I think create because static by
(16:36) default you don't need to create an object that class name you will call so I think if it is not static so maybe you have to create an object to call it um will it return error or what it will not I don't think it will give some error but you have to put I think static yes to uh directly call yeah so I think it will please check does it give yeah okay yes maybe it will you have to create an object at jvm will check yeah yeah so can we can we print something cons without m method yeah you we can I think before
(17:29) before we can but after Java 7 I'm not sure like but before 6 I think or seven using the static block we can but now I'm not sure before jav yes we can static block inside St so and uh which is spring version you are using your 2.5 or 2.7 some yeah 2.7 and what's the latest one 3 .7 or 36 something what were do you know like what was the enhancement in the latest version enement exactly the enhancement I think maybe regarding the annotations or configuration but I'm not sure I need to check exactly what enhancement yes
(18:17) yeah so uh can you please explain spring boot application annotation spring boot application annotations have three annotations for we have a configuration annotations we have component screen uh and one more is the uh we have enable auto configuration so this this is the combination of application like springbot application amutations Auto configuration is used to for to a the dependencies like for the configuration purpose I think will will go with the auto configuration configuration while you're using so it
(18:50) will create your bean like your to create an object it will check like it will what can I say it will manage so for that you can use the configuration and for component scans it will it will scan your packages like inside yeah okay so uh is configuration and rotation linked uh with auto wiring like that you know uh I think you have to using the configuration yeah you have to Auto I think you have to mention like Auto wiring you have to do I think okay like uh if you disable configuration can be autoare um we we can I think we what
(19:31) okay without I'm not sure like without what we can use to for that but uh I used no we cannot do auto wiring if we disable the auto configuration because Auto wiring is dependent on the auto configuration okay and uh like what's the difference between service annotation and uh component annotation okay service annotations and component annotations okay service annotations means inside the service you you're writing your logic okay your business logic so while you are using at the service means they it will Define
(20:13) that this is the service class this is the service okay and by using by using the at theate component okay component it will show uh it will show the it is a controller no component I think inside theate component I'm not I need to check component controller maybe there's a difference between controller and component not okay so we might have multiple files other than service files like util files and some helper files so we can use component there because those are not service files but like uh can we
(20:54) use component annotation in the service file I think yes we can use use the so like what's the point of using the service annotation when we can use component annotation anywhere okay maybe they have their own features point we can use um not sure so because in service annotation uh we have a lot of default error messages that are specific to the service uh logics so we can use component annotation but uh service using I mean uh service annotation is a preferred for theop okay in the service understood yes yeah so how how
(21:44) will you scale your application if uh suddenly a high load come in your application how will you scale it okay us the mic I think we use the micr service but so you are using microservices architecture yes in the current project last I was working on monol what's the benefit of microservice architecture benefit I can say that like while you are working with monolithic if something little change is there so you have to like you have to deploy like everything at once but in the microservices like different different
(22:25) services or independently they are running or uh or we can say that in the different different service you are using different different uh what can I say languages also for example one is net you can use one in the you can use the Java so it's it's a thing good for us and second thing is like microservices um I think it's a it divided in the different different services so it's I think it's easy to maintain rather than monolithic I think okay so as you have work with both monolithic and micros service which want
(22:56) you uh which uh one would you just to develop first like which one is the best actually I was not have much experience on the microservices I have just started so I I know a little more about monolithic part but microservices maybe it's difficult to manage also like if you have a different different services but it's little difficult to minut so yeah yeah I think um for me I think now mon only but I'm just exploring microservices thank you so do you know like recently Amazon Prime it's one of the largest changes
(23:32) microservices to yeah so we cannot say like this one is best on that one yeah maybe it depends on the stakeholder client and the VPS and all okay okay so moving ahead like how uh your microservices communicate with each other in your project okay communication I think okay for the communication I think they use messaging tools like um that part I'm not sure but maybe they'll use graphql or something for messaging and for cka they are using but I need to explore this part do you know about kka not much I'm still
(24:17) exploring which property files do you use yl file sorry which configuration file properties I proper properties why uh okay why I use f but why are maybe there's some advantages in the last project we have a yaml but here they use with properties I think uh I think not sure the advantage is over the yaml to the properties so property is simple and easy to manage and write butl is the than it's a prefer is a preferred okay but most of the projects like projects I have seen they they created yaml specification different
(25:10) specification yeah for that I used so which database you are using I we use the mongodb cross all your microservices or uh it's for the specific one as we can use a different database for each micro Services right hello hello connection I think uh we can use I think different different yes datab but in your case you are using only one database or the different database uh I think last project we used the mongodb only I'm not sure about the other database but yeah I have configured the mongodb so I know maybe
(25:54) different also use but I'm not sure like so what difference between spring framework and spring M okay so the difference is we can say that in the over the spring in the spring boot we have the some Auto configurations we have some annotations and we have some what can I say we have the uh servers like you don't need to start there's a there's a server what can I say um how I explain um embeded server embedded server we have so yes many I think features we have over this spr in the spring board so what's the
(26:34) name of idate server uh default we have a aache and uh you asking about the what's the Ed server inside this what's default server yeah default and you can if you want so you can include the JT or what if you want like other service also okay so you are saying a Tom K yeah like Tom K you can set it but how can you change the defa uh I think you can change using uh inside the dependencies I think you can you have to include exclude this one this and I think have so which which tool you have used for logging of for for logging logg like
(27:24) there there are some tools you can you can see logs uh uh uh Google uh like there are some like or different different not sure Lo maybe yeah they are inde dependen they mention but not sure okay so internally P log service you are using uh spring like we have log 4J and different different log loggers you know not much on so what's the testing strategies uh in your project testing strategy testing I think uh like you you're asking about unit testing like B testing like uh unit testing integration testing uh like how do you test your uh
(28:16) feature when you are going to deploy before production okay so firstly like the first way is to create the taste cases like junit or moito we are passing Some Mo values and using that I think second way uh okay uh we just dry we just end to end we normally just do the end and tasting like U I think in the inside the okay for that I think tasting some dependences but this is for I think uh tasting only we are using team uh what we are using um I think um um not I'm not read calling as of now like how this directly we just build and
(29:02) deploy and that only I'm not showing like so how much environments you have like Dev environment fraud environment do you have another uh apart from this um no like Dev okay so let's say uh your bro environment is uh slower than your Dev environment uh like what would you do in this case okay if it is slow okay so maybe uh okay uh maybe I will check the you are asking about something optimization part like for example let say you are working you are working on one uh feature and you have deployed in Dev environment you
(29:48) have tested it everything is working as expected now you are taking that that feature to the fraud okay but after deploying in fraud I You observe like this is slow slower than the de environment so how what would you do I think we check the logs first then I think we used in our last project something I have used the same situation it's come like came I think in my last project I'm not remembering but yeah we can check the logs or or we can try to check the I think internally for the day maybe some queries we need to check like uh in the
(30:31) database queries or cing and all I think if if possible so we'll do and we change I so as you said you are using aile methology so what's what's the benefit of using this methodology I think we use in my last project we use aile scrum okay so yes so what is the what was this like uh it was like for example we have a scrum Master Okay and we have some uh like daily you have to give your whatever the work you have done you the updates then you have the grooming section we have the retrospective meeting so this this different different
(31:06) sessions you have like meetings you have so in that meeting what what was like the main is to um if you have like for example you working on any particular jira and uh in in the current Sprint you have a Sprint like 15 days of Sprint so if you have any uh changes like if you face any issues in the current space current Sprint so you for to overcome like it will not again will come in the next Sprint you have some meetings like Retros like the I think retrospective meeting or like this uh these calls you have to discuss these things about like
(31:39) what uh what what what can I say uh what issues you have faces in last so that we can overcome so yeah I think this is better to I think better yeah to work in this uh environment so what was the critical feature you have uh work yet what was the most critical feature you have okay most critical feature I think I think I was working in the uh it was filtering or a PG I think fil H there was a filtering part I think first time I have used the a grid library in my angular front end part so in that AG grid uh I
(32:19) have to work in the filtering part so there are different different filters we have so uh I have created the custom component for that like some of the featur that it's not already present in the what can I say in documentation that's already that are already there for the AG grid so I have to for that I think I have created the custom custom component for that filtering part so I think that was a yeah little complex for me to work on that part and do you know what's your production deployment strategy production deployment strategy
(32:57) like there are some strategies like Gary or green blue something like there there are some you guys follow some strategies no I'm not sure because what we done like if we are working in any particular J so just working after completing there's a team City there's a team City we are using inside team City we are just build we check and we deploy like this is the way simple way so I'm not sure about these things so is is there any be Rev yes yes you have to request for PR like um then after like approval your PR then
(33:34) only I'll merge in my build like so who who who reviews your like we have a client so some people are working from the client side also so they are the like some seniors are there so they will uh and and after some time like uh the pr it's like that we all are if you are a team of five to six member so like if I'm working in my any story so other will review if other on I will review like that we are working like reviewing yeah our story here
