(341) Java Spring Boot 3 Years Interview Experience - YouTube
https://www.youtube.com/watch?v=3i3WiZ4U0HE

Transcript:
(00:00) so hey guys today we have Sidi Gupta and he is having three years of experience in Java and spring Boot and guys please subscribe this channel if you want to prepare for your interviews so let's get started hey hi Sidi how are you yeah hi Ali I'm good and what about you yes I'm also good shall we start yeah definitely okay okay uh can you please tell me about yourself and your recent project yeah myself gup San currently I working in organization mhm I had around 3.
(00:34) 3 years of experience in working with this organization during this duration I had done two different projects one is related to financial services and and the another one is related to hospitality domain the current one is Hospitality domain which is like a restaurant management application which holds and maintains uh around 1900 plus restaurants in the US region MH we are developing products and many things to that particular application from end to end okay for managing ordering and inventory management and other things okay okay so uh
(01:10) uh which logging tools you are using we are using slf 4G logging tool SLS 4G loging tools how did you integrate that yeah by adding the uh logging dependency Lo dep into the form. XML file and all okay okay so before moving to further questions I heard you recently took our interview preparation kit so was it helpful or what I you just told me that you took this yeah it's definitely helping me in cracking the interview I recently got placed in a organization where the interview helped me really well oh I was not able to find all the
(01:49) questions in one place yeah yeah yeah so this contains all yeah go ahead yeah it contains all the questions that the interviewer asked and it needs some more questions we cannot predict the questions that are asked by the interview right so it covers most of the questions and projects are also there if someone is not is on bench or working on place the project in our resume they can add those projects in your their resume and chat support through by going through the project description we can mention or describe
(02:24) our project about what to mention what not to mention in the project description those help me very well okay okay so I'm very happy uh to H this like you crack your technical interviews and yes I'm very happy okay I am providing the link of interview preparation kit Below in the description please go and check it out now so moving ahead uh moving to our questions uh which DB are you using and how did you connect uh with that DB in our project we are using two different databases one is rdbms and one no SQL database no SQL database I
(03:00) had work rdbms which is myql database we integrate that with the providing stter dependency as pring data jpa okay and MySQL connector we connect the database with the properties application. yl file using the spring data source connections okay okay so uh moving ahead uh what is a spring boot dependency management spring board dependency uh spring board dependency management includes uh which provides which provides a starter parent dependency where the group of smaller dependencies are merged into a single dependency to provide a single
(03:43) functionality consider a spring data not spring web which provides many dependencies which are used to develop a restful web application okay the springb stter dependency itself the dependency management Whenever there are dependencies inside a p. XML file it will updates it will gets the latest versions of the dependencies that are available in the application okay okay got it so is it possible to change the port of uh the M tomit server in Spring boot application Yeah by with the help of application.
(04:17) file by changing the ser. port we can change the port of the application okay okay okay what happens if a starter dependency includes conflicting versions of libraries with other dependencies in the project Pro uh let's say we have multiple dependencies in our P file okay as you know with spring boot starter dependencies version should be matched uh we cannot lower or upgrade the version as per our spring boot starter version so what if there is a conflict uh versions of the libraries with other dependencies first of all it will uh the
(04:58) project will not load itself so how will you overcome this with the help of M I think so okay yeah I think we need manual intervention to resolve this veran uh dependencies need to add some you see you had version related things uh one row inside the dependency something like that uh yeah okay so what's the default Port of Tom C in Spring boot 80 80 80 can we replace this yes we can replace okay can we disable the default web server in Spring boot application yes we can disable and we can update the how will you disable how
(05:48) will you disable using the application file who can disable application. yl file we can disable the tomet server tomet server okay in uh application yl file or form file we need to exclude something yeah yes in the application pom.xml file we have to um in the exclude properties that then that place we have to exclude the correct corre so we can disable the default web server in Springwood application by uh setting some like application type none spring.
(06:32) main. web application typh type is equal to none in properties file okay yeah yeah in the configuration side we have to do that from pom.xml right yeah yeah no not not in pom XML in application yl or properties file okay got it yeah so how to disable specific autoc configuration class by excluding the configuration okay uh excluding how will you exclude in the main application the configuration we have to exclude what are the configuration F that need to exclude equal to the files that so have you heard about have you heard
(07:21) about exclude attributes uh inside the enable auto configuration yeah in that only we have to up um the configuration that we don't want to configure correct correct correct okay can you tell me the difference between rest controller and controller yeah rest controller is a combination of controller and response body rest controller is used for um applications which are returning Json data type but for controller we are you using for that for uh applications uh APS that are returning the responsive HTML format
(08:00) okay so rest controller returns Json type only it can return can it return XML yes I hav XML format yeah I think we can return XML format as well okay okay okay I haven't tried it manually so yeah yeah no worries that's fine uh moving ahead can you tell me the difference between request mapping and get mapping request mapping and get mapping we can replace that with the get map we can replace the get mapping with request mapping where it is we can use the request mapping as the base URL for the entire controller class
(08:48) MH okay okay where should we use request mapping and get mapping I mean can you tell me some uh example can you share some example of the real API okay know consider a project like it is like a restaurant the the different services are having different get apas mhm and the main request mapping in the request mapping we can use the resturant name as the request map URL and the particular method we can use the get method that particular service method like uh inventory like like order we can use that for okay okay got it got it uh can you
(09:37) tell me the difference between war and embeded containers war and embid containers embid containers I [Music] hav okay so basically traditional War uh requires uh external server like Tom cat or J boss while uh embeded containers Well Spring boot with an embed container bundles the server within the application I mean we don't need to require an external server so that's a different okay okay as you had added om that's why I was worried is it hypernet related or is it related to T so that's why was not able to recall
(10:20) that yeah yeah no worries that is fine can we check the environment properties in our spring boot application environment properties conf we have to define the environment properties through the uh run configuration of the application with the help of no it is not possible to check that uh how I mean why because environment properties are used to define run the application with particular configurations we cannot okay so can we use can we can also use the environment uh as a I mean we can autoare the environment class right in our uh yeah
(11:07) which from the application okay uh there is a method get property I think remember yes there are three types of injecting the one is with the value me and another one was not correct correct correct okay moving ahead uh can you explain uh the need of tool dependency pardon uh have you heard about Dev tool dependency yeah okay de to which will reload the application in the Lesser time if there are whenever this dependenc is added into the application the reloading time of the application will drastically reduce
(11:48) because it will only do the updated changes if the updated changes are more then it will do the entire application rebuild okay okay okay all right uh okay moving ahead how do you test a spring boot application we are using how do you test yeah yeah unit testing can you uh share us a steps uh how what steps you follow from the scratch okay for testing a spring boot application we are the application if the application is a three AR teure there are three different layers one is controller layer service layer and repos
(12:28) layer we have to test the three these three different three services MH when it comes to controller we have to use theate web MC test for reposit and services we can Define at theate test okay whenever there are some dependencies to run this application like Services is depend on service application is dependent on repository we cannot directly use the database Connections in this when during testing so we are using Hy H2 datab internal in memory H2 database for during testing okay okay so we can mock these dependencies with the
(13:10) help of Mo okay okay so what's the purpose of unit testing in our uh software development uh uh things area Okay unit testing defines to test the particular block of code with all the exact scenarios um if the particular operation is like addition operation we can perform we can provide different values whether the output is correct or not with the expected and actual values okay okay so what's the coverage rule in your project uh code coverage rule do you have any code coverage it was 90% minimum 90% so you always maintain 19
(13:50) 90% yes definitely okay uh what's the role of spring boot test annotation spring test provides starter dependencies for start test provides starter dependencies for junit moito J meter and Jos for entire application we don't need to mention the dependencies for junit and marito which are all embedded into a St test dependency okay okay okay uh got it uh can you explain the purpose of bom XML file in our M project okay pal XML file contains all the dependencies and configurations for the application to run okay during the
(14:37) application startup itself um it will load all the configurations from the P XML file so it is mandatory to have an XML file when building an application okay good good uh moving ahead what servers are provided by Spring boot application and which one is default it provides Tom and J by the the default server is tomate we can update the server to JY also by disabling the tomate and enabling the JY server dependen in the XML file okay so can you explain the component scan and B annotation okay component scan is used
(15:25) to scan the beans component scan is used to scan all the components which are available in the particular project during the application startup theate Bean is used for particularly creating a beam those are described in configuration classes where just like when it comes to security there are several methods which we want to create the bean explicitly for that we are we can use atate Bean okay okay all right so H how can you programmatically determine which profiles are currently active in a spring boot application uh there are there we may
(16:07) have multiple profiles right yeah so how can we identify which one is uh currently active so there is a get active profiles method in the environment object so we can find from that okay yeah yeah how to enable uh debugging log spring boot application like have you uh wrote some right uh yeah there are several
(16:42) l.l. rule is equal to D okay yeah there are several lels in debug loging one is er debug and other things Yeah Yeah by default error deug by default error info and one by default enabl yeah yeah correct correct what's the purpose of having a spring boot starter parent you know stter [Music] parent stter parent which provides uh which updates all the starter dependencies that are available to the up toate versions which are used in the dependencies okay yes along with those uh that it also include default plug-in configuration resource filtering
(17:38) dependency management etc etc okay yeah and what are the best uh what are the rest API best practices like what you follow in your project what are their best practices but there are best practice like versioning with the particular version is causing any problems we have to do provide another version and it was it does not store any [Music] information okay like there should be proper HTTP methods there should be proper proper HTP methods status code like 200 processes so do you know what's the status code for delete if it is
(18:24) successfully deleted uh let's say we have can provide 200 okay MH okay uh yes and what about four uh four four series is related to client server side errors which are 400 internal server error for if the data is not form who can return 44 404 correct correct okay and have you worked on multi-threaded environment uh I had work some I haven't worked that much on Multi environment MH okay uh no the multi application where we can use can you brief on this like what these multi- threading applications do and why do we use
(19:15) multi-threaded environment in a few of our requirements okay if the particular block or any method contains local variables the multi threaded if you use that in a multi threaded environment it may change the value without knowing the other thread so when it comes to synchronized block only only one thre at a time is going to access and updates that particular value so okay okay can you tell me the uh few best practices when you apply collections in your project what things you consider we will consider when it comes to list whether to if
(20:01) there are particular if the usage is about more retrievals and more is to get more retrievers then we are using ER list if the updations and based on the time complexity we are using different collections okay okay okay so have have you ever uh tested uh static method no okay but uh do you know how do we how can we test the static method okay so it can be done by calling them directly in our test cases we don't need to create an object just the simple uh static things okay with the help of class name we can call that I think you
(20:52) already uh knew this but you are not recalling no worries uh moving ahead what is the interface and in Java and why do we uh why do you use if uh it you cannot write anything concrete on it interface is interface is used for providing obstruction obstruction is like only showing the particular functionality without showing all the implementation or internal details with the help of interface we can achieve 100% abstraction there are also abstract class like which is also provides abstraction but not that much with the help of interfaces we can
(21:37) provide 100% exraction okay so why multiple inheritance is not possible and how interface uh solve this problem okay multiple inheritance is like if you consider classes A B C Class A and Class B having a same method if the class C ends that both [Music] classes when we call a method the same method from the class C there will be an ambiguity which method to call from the class C this will causes a diamond error problem we can eliminate this by using interfaces yes interface only contains the method definition so we can call our
(22:22) own method and provide our own implementation for that method okay okay uh okay and uh uh uh what's the difference between abstract class and interface yeah if even if there is any abstract method in the particular class then the class must need to be defined as abstract abstract Clause okay okay when it comes to interface all the methods in the interface are by default abstract we don't need to provide any abstract keyword in the interface from jav onwards the functional the interface can contains both default and static methods
(23:04) mhm the only difference between abstract class and interface is like we can create Constructor for abstract class but we cannot create for the interface okay okay okay uh uh have you ever used design pattern in your project any design pattern yeah I'm aware of single turn design pattern okay so where you have used and why uh no project we have used in current scenario there are the market is like saying about it is an anti pattern mhm yeah I was not aware why it was called it anti pattern but whenever there was a single instance needed for
(23:46) the entire application without creating any other instance that time we had used single turn design pattern okay can you explain Lisk of substitution principle lco substitution principle is of parent and child relationship if the the child can be replaced by the parent can be replaced by child uhhuh yeah so okay so the me the methods or any other things that are extended from a one class to another class then we can replace the sub class with the parent class okay parent class with the sub class okay okay uh can you tell me which one is better
(24:31) Constructor injection or Setter injection yeah Constructor injection is better why there will be only single Constructor single Constructor is available we can yeah okay there will be only single Constructor available with all the methods in a particular application when it comes to set meth Setter injection we have to manually write right okay so Constructor injection is better because uh it allows for immutability and ensures that all the dependencies are set before the object is used uh whereas set injection uh me I think
(25:15) cannot do these things and cannot provide some better things okay moving ahead uh uh one second so uh what what is a static keyword static keyword which provides a single instance for all the for yeah it provides of returns only single instance okay okay can a static block throw an exception yes it throws uh check exceptions uh okay okay it is it depends on versions or it throw it can throw in every Java version okay can you override static methods in Java yeah we can static methods in Java but if there are same methods in static
(26:19) methods right or static BLS okay static methods are you sure like we can override the okay okay you saying static methods right we cannot over static methods but we can overload static methods yes yes correct uh correct correct and what about final keyword what is this final keyword okay we can use the final keyword for classes variables and methods but whenever you are using final keyword for a class no other class can extend this class for variable it will be only single instance will be available okay and we cannot change the
(26:57) variable value if the variable is of type final for particular method if we had applied okay can cannot okay okay can can we modify a final object reference in Java okay so we cannot change the reference of the final object once it has been assigned uh meaning we cannot make it a point to different object however we can still modify the object's internal state if it is mutable okay okay so what's the impact of declaring a method as Final on inheritance okay the the classes that are implementing that interface cannot
(27:47) uh override that method cannot implement or over that method okay okay correct correct uh moving ahead head so how do you handle exceptions in your project by providing custom exceptions with the with a global exception Handler MH and the exception Handler okay what uh strategies you use majorly for uh like you said you handled Global through Global exception or uh yeah okay there was a separate package called exception Handler we provide all the exceptions mhm with the help of global exception Handler we will annotate that with
(28:36) the controller advice where whenever an exception is thrown in the entire application it will first check whether the applic exception is defined in the controller Global exception Handler or not if it is defend then it will throw from the point of okay okay uh can you uh share some custom exception names that you guys are throwing in your current project okay whenever the order was Finding if the order is not able to find then we can throw order ID order with ID not for an exception MH when the user was not exception when particular user
(29:17) wants to search for a particular item then we can throw particular item was not found exception M yeah okay okay these are uned exceptions and have to extend this by runtime exception okay okay got it got it moving ahead do you know about Java memory model yeah I'm can you please give a brief on this okay first of all Java memory is a it provides a native memory for all the instances and the things it provides he memory memory for storing objects and for storing objects arrays and strings and there was a memory called
(30:06) stack which is used for storing local variables and reference variables stack contains a for every method or for every thread there will be a separate stack created in the stack space and there was a new space which is introduced in Java as a part of memory management to enhance the memory it is like peren previously called pen now is called as metaspace it is used to hold static variables methods static blocks and class structures okay okay all right okay so moving to some coding questions uh I would ask you some coding questions you
(30:46) don't need to uh write them just uh tell your approach here verbally okay so first question is uh if you are given an array of integers and your task is to remove uh the duplicate elements and make the array containing unique unique numbers uh so how will you do that in [Music] Java I will you can use uh two for Loops for comparing the first element with the second element and if it is found then we have to make it zero yeah we have to make it zero or n so in that way we can up the value cannot we use map like can
(31:32) we store uh the key and which and in the value uh can we store how many times got it as you had said different array so that's why using basic Java when it comes to we can make that as an array list with the help of array and in the there are several methods in Array list do distinct in that methods we can use okay if it is of type key and value P we can use hashmap to define this okay and uh how do you sort uh let's say you are asked to write any program and that program required a sorting array so
(32:12) how how would you sort that thing in Java you can uh like what approach do you generally use okay collections provide particular methods like in the collections framework it provides two different like comparable and comparator interface compar and comparator methods which is which provides comparing based on the comparable is for single sorting sequence and comparator is for sorting multiple sequences M we can use them in the collectors.
(32:41) sort method to compare the particular so do you know uh internally collector sort uses uh which algorithm compare comp uh it uses two- pointer approach or fast and slow no no it's I it's using uh something modified version of quick s some pivot something related to that okay okay yeah yeah and uh now moving to the next question uh so uh how do you how will you uh find whether a number is prime or not in the fastest way in the best approach what would be your best [Music] approach you will start a loop from two till the number and check whether it is
(33:45) okay it is divisible by zero or if it is divisible by itself or one or so that way we can check but I was thinking first approach using Java that's the only approach okay so first approach is uh we will create a loop from two till the number and check whether it is divisible by that number or not if it is then it's not a prime if it is not divisible by any number between that range then it's a prime number so this is the first way of doing this program the second way is we will iterate the loop from two but
(34:19) not till the actual number we will iterate till let's say we have a number n and we have to find whether it's a prime or not so we will iterate loop from 2 till n by two not n n by two and the third approach would be we will start from two but we will not go until n by2 we will go under root n till under root n okay yeah then also we can find whether a number is prime or not okay yeah good okay so uh uh yes it's uh done from my end uh
